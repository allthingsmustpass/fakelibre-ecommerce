paths:
  /products:
    get:
      summary: Get all products
      parameters:
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: sort
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
        '404':
          description: Products not found
        '500':
          description: Internal server error
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductInput'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Producto creado correctamente'
                  product:
                    $ref: '#/components/schemas/Product'
        '400':
          description: Product code already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Ya existe un producto con este c√≥digo'
        '403':
          description: Only premium users can create products
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Solo los usuarios premium pueden crear productos'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Error al crear el producto'

  /products/{pid}:
    get:
      summary: Get a product by ID
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '500':
          description: Internal server error
    put:
      summary: Update a product
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '403':
          description: Unauthorized to update product
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'No tienes permiso para actualizar este producto'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Producto no encontrado'
        '500':
          description: Internal server error
    delete:
      summary: Delete a product
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Producto eliminado correctamente'
        '403':
          description: Unauthorized to delete product
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'No tienes permiso para eliminar este producto'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Producto no encontrado'
        '500':
          description: Internal server error

  /products/mocking:
    get:
      summary: Get mocking products
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
        '404':
          description: Products not found
        '500':
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
